   1               		.file	"led.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	LED_init
  12               	LED_init:
  13               	.LFB0:
  14               		.file 1 "../code/ECUAL/LED/led.c"
   1:../code/ECUAL/LED/led.c **** #include "led.h"
   2:../code/ECUAL/LED/led.c **** 
   3:../code/ECUAL/LED/led.c **** EN_ledError_t LED_init(ST_led_t led)
   4:../code/ECUAL/LED/led.c **** {
  15               		.loc 1 4 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
   5:../code/ECUAL/LED/led.c ****     /* function skeleton
   6:../code/ECUAL/LED/led.c ****      * 1-call GPIO_initPin and pass ledPin, ledPort, and OUT as the direction
   7:../code/ECUAL/LED/led.c ****      * 2-switch over the flag (return of GPIO_initPin)
   8:../code/ECUAL/LED/led.c ****      *      2.1-in each case fill the result with the corresponding EN_ledError_t
   9:../code/ECUAL/LED/led.c ****      * 3-return the result
  10:../code/ECUAL/LED/led.c ****      */
  11:../code/ECUAL/LED/led.c ****     EN_ledError_t ret = LED_OK;
  12:../code/ECUAL/LED/led.c ****     EN_gpioError_t flag;
  13:../code/ECUAL/LED/led.c **** 
  14:../code/ECUAL/LED/led.c ****     /* 1-call GPIO_initPin and pass ledPin, ledPort, and OUT as the direction */
  15:../code/ECUAL/LED/led.c ****     flag = GPIO_initPin(led.ledPin, led.ledPort, OUT); // output device
  22               		.loc 1 15 0
  23 0000 41E0      		ldi r20,lo8(1)
  24 0002 692F      		mov r22,r25
  25 0004 0E94 0000 		call GPIO_initPin
  26               	.LVL1:
  16:../code/ECUAL/LED/led.c **** 
  17:../code/ECUAL/LED/led.c ****     /* 2-switch over the flag (return of GPIO_initPin) */
  18:../code/ECUAL/LED/led.c ****     switch (flag)
  27               		.loc 1 18 0
  28 0008 8130      		cpi r24,lo8(1)
  29 000a 01F0      		breq .L3
  30 000c 8230      		cpi r24,lo8(2)
  31 000e 01F4      		brne .L8
  32               	.LVL2:
  19:../code/ECUAL/LED/led.c ****     {
  20:../code/ECUAL/LED/led.c ****         /* 2.1-in each case fill the result with the corresponding EN_ledError_t */
  21:../code/ECUAL/LED/led.c ****     case GPIO_OK:
  22:../code/ECUAL/LED/led.c ****         ret = LED_OK;
  23:../code/ECUAL/LED/led.c ****         break;
  24:../code/ECUAL/LED/led.c ****     case WRONG_PIN:
  25:../code/ECUAL/LED/led.c ****         ret = WRONG_LED_PIN;
  26:../code/ECUAL/LED/led.c ****         break;
  27:../code/ECUAL/LED/led.c ****     case WRONG_PORT:
  28:../code/ECUAL/LED/led.c ****         ret = WRONG_LED_PORT;
  33               		.loc 1 28 0
  34 0010 82E0      		ldi r24,lo8(2)
  35               	.LVL3:
  36 0012 0895      		ret
  37               	.LVL4:
  38               	.L3:
  25:../code/ECUAL/LED/led.c ****         break;
  39               		.loc 1 25 0
  40 0014 81E0      		ldi r24,lo8(1)
  41               	.LVL5:
  42 0016 0895      		ret
  43               	.LVL6:
  44               	.L8:
  11:../code/ECUAL/LED/led.c ****     EN_gpioError_t flag;
  45               		.loc 1 11 0
  46 0018 80E0      		ldi r24,0
  47               	.LVL7:
  29:../code/ECUAL/LED/led.c ****     default:
  30:../code/ECUAL/LED/led.c ****         break;
  31:../code/ECUAL/LED/led.c ****     }
  32:../code/ECUAL/LED/led.c ****     /* 3-return the result */
  33:../code/ECUAL/LED/led.c ****     return ret;
  34:../code/ECUAL/LED/led.c **** }
  48               		.loc 1 34 0
  49 001a 0895      		ret
  50               		.cfi_endproc
  51               	.LFE0:
  53               	.global	LED_on
  55               	LED_on:
  56               	.LFB1:
  35:../code/ECUAL/LED/led.c **** 
  36:../code/ECUAL/LED/led.c **** EN_ledError_t LED_on(ST_led_t led)
  37:../code/ECUAL/LED/led.c **** {
  57               		.loc 1 37 0
  58               		.cfi_startproc
  59               	.LVL8:
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 0 */
  63               	.L__stack_usage = 0
  38:../code/ECUAL/LED/led.c ****     /* function skeleton
  39:../code/ECUAL/LED/led.c ****      * 1-call GPIO_writePin and pass ledPin, ledPort, and HIGH as a value
  40:../code/ECUAL/LED/led.c ****      * 2-switch over the flag (return of GPIO_writePin)
  41:../code/ECUAL/LED/led.c ****      *      2.1-in each case fill the result with the corresponding EN_ledError_t
  42:../code/ECUAL/LED/led.c ****      * 3-return the result
  43:../code/ECUAL/LED/led.c ****      */
  44:../code/ECUAL/LED/led.c ****     EN_ledError_t ret = LED_OK;
  45:../code/ECUAL/LED/led.c ****     EN_gpioError_t flag;
  46:../code/ECUAL/LED/led.c **** 
  47:../code/ECUAL/LED/led.c ****     /* 1-call GPIO_writePin and pass ledPin, ledPort, and HIGH as a value */
  48:../code/ECUAL/LED/led.c ****     flag = GPIO_writePin(led.ledPin, led.ledPort, HIGH); // led on when high
  64               		.loc 1 48 0
  65 001c 41E0      		ldi r20,lo8(1)
  66 001e 692F      		mov r22,r25
  67 0020 0E94 0000 		call GPIO_writePin
  68               	.LVL9:
  49:../code/ECUAL/LED/led.c **** 
  50:../code/ECUAL/LED/led.c ****     /* 2-switch over the flag (return of GPIO_writePin) */
  51:../code/ECUAL/LED/led.c ****     switch (flag)
  69               		.loc 1 51 0
  70 0024 8130      		cpi r24,lo8(1)
  71 0026 01F0      		breq .L11
  72 0028 8230      		cpi r24,lo8(2)
  73 002a 01F4      		brne .L15
  74               	.LVL10:
  52:../code/ECUAL/LED/led.c ****     {
  53:../code/ECUAL/LED/led.c ****         /* 2.1-in each case fill the result with the corresponding EN_ledError_t */
  54:../code/ECUAL/LED/led.c ****     case GPIO_OK:
  55:../code/ECUAL/LED/led.c ****         ret = LED_OK;
  56:../code/ECUAL/LED/led.c ****         break;
  57:../code/ECUAL/LED/led.c ****     case WRONG_PIN:
  58:../code/ECUAL/LED/led.c ****         ret = WRONG_LED_PIN;
  59:../code/ECUAL/LED/led.c ****         break;
  60:../code/ECUAL/LED/led.c ****     case WRONG_PORT:
  61:../code/ECUAL/LED/led.c ****         ret = WRONG_LED_PORT;
  75               		.loc 1 61 0
  76 002c 82E0      		ldi r24,lo8(2)
  77               	.LVL11:
  78 002e 0895      		ret
  79               	.LVL12:
  80               	.L11:
  58:../code/ECUAL/LED/led.c ****         break;
  81               		.loc 1 58 0
  82 0030 81E0      		ldi r24,lo8(1)
  83               	.LVL13:
  84 0032 0895      		ret
  85               	.LVL14:
  86               	.L15:
  44:../code/ECUAL/LED/led.c ****     EN_gpioError_t flag;
  87               		.loc 1 44 0
  88 0034 80E0      		ldi r24,0
  89               	.LVL15:
  62:../code/ECUAL/LED/led.c ****     default:
  63:../code/ECUAL/LED/led.c ****         break;
  64:../code/ECUAL/LED/led.c ****     }
  65:../code/ECUAL/LED/led.c **** 
  66:../code/ECUAL/LED/led.c ****     /* 3-return the result */
  67:../code/ECUAL/LED/led.c ****     return ret;
  68:../code/ECUAL/LED/led.c **** }
  90               		.loc 1 68 0
  91 0036 0895      		ret
  92               		.cfi_endproc
  93               	.LFE1:
  95               	.global	LED_off
  97               	LED_off:
  98               	.LFB2:
  69:../code/ECUAL/LED/led.c **** 
  70:../code/ECUAL/LED/led.c **** EN_ledError_t LED_off(ST_led_t led)
  71:../code/ECUAL/LED/led.c **** {
  99               		.loc 1 71 0
 100               		.cfi_startproc
 101               	.LVL16:
 102               	/* prologue: function */
 103               	/* frame size = 0 */
 104               	/* stack size = 0 */
 105               	.L__stack_usage = 0
  72:../code/ECUAL/LED/led.c ****     /* function skeleton
  73:../code/ECUAL/LED/led.c ****      * 1-call GPIO_writePin and pass ledPin, ledPort, and LOW as a value
  74:../code/ECUAL/LED/led.c ****      * 2-switch over the flag (return of GPIO_writePin)
  75:../code/ECUAL/LED/led.c ****      *     2.1-in each case fill the result with the corresponding EN_ledError_t
  76:../code/ECUAL/LED/led.c ****      * 3-return the result
  77:../code/ECUAL/LED/led.c ****      */
  78:../code/ECUAL/LED/led.c ****     EN_ledError_t ret = LED_OK;
  79:../code/ECUAL/LED/led.c ****     EN_gpioError_t flag;
  80:../code/ECUAL/LED/led.c **** 
  81:../code/ECUAL/LED/led.c ****     /* 1-call GPIO_writePin and pass ledPin, ledPort, and LOW as a value */
  82:../code/ECUAL/LED/led.c ****     flag = GPIO_writePin(led.ledPin, led.ledPort, LOW); // led on when low
 106               		.loc 1 82 0
 107 0038 40E0      		ldi r20,0
 108 003a 692F      		mov r22,r25
 109 003c 0E94 0000 		call GPIO_writePin
 110               	.LVL17:
  83:../code/ECUAL/LED/led.c **** 
  84:../code/ECUAL/LED/led.c ****     /* 2-switch over the flag (return of GPIO_writePin) */
  85:../code/ECUAL/LED/led.c ****     switch (flag)
 111               		.loc 1 85 0
 112 0040 8130      		cpi r24,lo8(1)
 113 0042 01F0      		breq .L18
 114 0044 8230      		cpi r24,lo8(2)
 115 0046 01F4      		brne .L22
 116               	.LVL18:
  86:../code/ECUAL/LED/led.c ****     {
  87:../code/ECUAL/LED/led.c ****         /* 2.1-in each case fill the result with the corresponding EN_ledError_t */
  88:../code/ECUAL/LED/led.c ****     case GPIO_OK:
  89:../code/ECUAL/LED/led.c ****         ret = LED_OK;
  90:../code/ECUAL/LED/led.c ****         break;
  91:../code/ECUAL/LED/led.c ****     case WRONG_PIN:
  92:../code/ECUAL/LED/led.c ****         ret = WRONG_LED_PIN;
  93:../code/ECUAL/LED/led.c ****         break;
  94:../code/ECUAL/LED/led.c ****     case WRONG_PORT:
  95:../code/ECUAL/LED/led.c ****         ret = WRONG_LED_PORT;
 117               		.loc 1 95 0
 118 0048 82E0      		ldi r24,lo8(2)
 119               	.LVL19:
 120 004a 0895      		ret
 121               	.LVL20:
 122               	.L18:
  92:../code/ECUAL/LED/led.c ****         break;
 123               		.loc 1 92 0
 124 004c 81E0      		ldi r24,lo8(1)
 125               	.LVL21:
 126 004e 0895      		ret
 127               	.LVL22:
 128               	.L22:
  78:../code/ECUAL/LED/led.c ****     EN_gpioError_t flag;
 129               		.loc 1 78 0
 130 0050 80E0      		ldi r24,0
 131               	.LVL23:
  96:../code/ECUAL/LED/led.c ****     default:
  97:../code/ECUAL/LED/led.c ****         break;
  98:../code/ECUAL/LED/led.c ****     }
  99:../code/ECUAL/LED/led.c **** 
 100:../code/ECUAL/LED/led.c ****     /* 3-return the result */
 101:../code/ECUAL/LED/led.c ****     return ret;
 102:../code/ECUAL/LED/led.c **** }
 132               		.loc 1 102 0
 133 0052 0895      		ret
 134               		.cfi_endproc
 135               	.LFE2:
 137               	.global	LED_toggle
 139               	LED_toggle:
 140               	.LFB3:
 103:../code/ECUAL/LED/led.c **** 
 104:../code/ECUAL/LED/led.c **** EN_ledError_t LED_toggle(ST_led_t led)
 105:../code/ECUAL/LED/led.c **** {
 141               		.loc 1 105 0
 142               		.cfi_startproc
 143               	.LVL24:
 144               	/* prologue: function */
 145               	/* frame size = 0 */
 146               	/* stack size = 0 */
 147               	.L__stack_usage = 0
 106:../code/ECUAL/LED/led.c ****     /* function skeleton
 107:../code/ECUAL/LED/led.c ****      * 1-call GPIO_togglePin and pass ledPin and ledPort
 108:../code/ECUAL/LED/led.c ****      * 2-switch over the flag (return of GPIO_togglePin)
 109:../code/ECUAL/LED/led.c ****      *    2.1-in each case fill the result with the corresponding EN_ledError_t
 110:../code/ECUAL/LED/led.c ****      * 3-return the result
 111:../code/ECUAL/LED/led.c ****      */
 112:../code/ECUAL/LED/led.c ****     EN_ledError_t ret = LED_OK;
 113:../code/ECUAL/LED/led.c ****     EN_gpioError_t flag;
 114:../code/ECUAL/LED/led.c **** 
 115:../code/ECUAL/LED/led.c ****     /* 1-call GPIO_togglePin and pass ledPin and ledPort */
 116:../code/ECUAL/LED/led.c ****     flag = GPIO_togglePin(led.ledPin, led.ledPort);
 148               		.loc 1 116 0
 149 0054 692F      		mov r22,r25
 150 0056 0E94 0000 		call GPIO_togglePin
 151               	.LVL25:
 117:../code/ECUAL/LED/led.c **** 
 118:../code/ECUAL/LED/led.c ****     /* 2-switch over the flag (return of GPIO_togglePin) */
 119:../code/ECUAL/LED/led.c ****     switch (flag)
 152               		.loc 1 119 0
 153 005a 8130      		cpi r24,lo8(1)
 154 005c 01F0      		breq .L25
 155 005e 8230      		cpi r24,lo8(2)
 156 0060 01F4      		brne .L29
 157               	.LVL26:
 120:../code/ECUAL/LED/led.c ****     {
 121:../code/ECUAL/LED/led.c ****         /* 2.1-in each case fill the result with the corresponding EN_ledError_t */
 122:../code/ECUAL/LED/led.c ****     case GPIO_OK:
 123:../code/ECUAL/LED/led.c ****         ret = LED_OK;
 124:../code/ECUAL/LED/led.c ****         break;
 125:../code/ECUAL/LED/led.c ****     case WRONG_PIN:
 126:../code/ECUAL/LED/led.c ****         ret = WRONG_LED_PIN;
 127:../code/ECUAL/LED/led.c ****         break;
 128:../code/ECUAL/LED/led.c ****     case WRONG_PORT:
 129:../code/ECUAL/LED/led.c ****         ret = WRONG_LED_PORT;
 158               		.loc 1 129 0
 159 0062 82E0      		ldi r24,lo8(2)
 160               	.LVL27:
 161 0064 0895      		ret
 162               	.LVL28:
 163               	.L25:
 126:../code/ECUAL/LED/led.c ****         break;
 164               		.loc 1 126 0
 165 0066 81E0      		ldi r24,lo8(1)
 166               	.LVL29:
 167 0068 0895      		ret
 168               	.LVL30:
 169               	.L29:
 112:../code/ECUAL/LED/led.c ****     EN_gpioError_t flag;
 170               		.loc 1 112 0
 171 006a 80E0      		ldi r24,0
 172               	.LVL31:
 130:../code/ECUAL/LED/led.c ****     default:
 131:../code/ECUAL/LED/led.c ****         break;
 132:../code/ECUAL/LED/led.c ****     }
 133:../code/ECUAL/LED/led.c **** 
 134:../code/ECUAL/LED/led.c ****     /* 3-return the result */
 135:../code/ECUAL/LED/led.c ****     return ret;
 136:../code/ECUAL/LED/led.c **** }...
 173               		.loc 1 136 0
 174 006c 0895      		ret
 175               		.cfi_endproc
 176               	.LFE3:
 178               	.Letext0:
 179               		.file 2 "../code/ECUAL/LED/../../MCAL/GPIO/gpio.h"
 180               		.file 3 "../code/ECUAL/LED/led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 led.c
     /tmp/cclNpL4W.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cclNpL4W.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cclNpL4W.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cclNpL4W.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cclNpL4W.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cclNpL4W.s:12     .text:0000000000000000 LED_init
     /tmp/cclNpL4W.s:55     .text:000000000000001c LED_on
     /tmp/cclNpL4W.s:97     .text:0000000000000038 LED_off
     /tmp/cclNpL4W.s:139    .text:0000000000000054 LED_toggle

UNDEFINED SYMBOLS
GPIO_initPin
GPIO_writePin
GPIO_togglePin
